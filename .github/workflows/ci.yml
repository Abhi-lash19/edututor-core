name: Edututor CI Pipeline

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint & Type Check (Python 3.11)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "**/pyproject.toml"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Show environment information
        run: |
          echo "Python: $(python --version)"
          echo "Pip: $(pip --version)"
          echo "Ruff: $(ruff --version)"
          echo "Black: $(black --version)"
          echo "isort: $(isort --version)"
          echo "mypy: $(mypy --version)"

      - name: Run Ruff linter
        run: |
          echo "=== Running Ruff linting ==="
          ruff check . --output-format=github

      - name: Check code formatting with Black
        run: |
          echo "=== Checking code formatting ==="
          black --check --diff .

      - name: Check import sorting with isort
        run: |
          echo "=== Checking import sorting ==="
          isort --check-only --diff .

      - name: Run pre-commit hooks
        run: |
          echo "=== Running pre-commit hooks ==="
          pre-commit run --all-files --show-diff-on-failure

      - name: Run type checking with mypy
        run: |
          echo "=== Running type checking ==="
          python -m mypy src --install-types --non-interactive

      - name: Security audit with pip-audit
        continue-on-error: true
        run: |
          echo "=== Running security audit ==="
          pip-audit --desc on

  test:
    name: Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        include:
          - python-version: "3.10"
            experimental: false
          - python-version: "3.11"
            experimental: false
          - python-version: "3.12"
            experimental: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "**/pyproject.toml"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Show test environment information
        run: |
          echo "Python: $(python --version)"
          echo "Pip: $(pip --version)"
          echo "Pytest: $(pytest --version)"
          echo "Platform: $(python -c 'import sys; print(sys.platform)')"

      - name: Run tests with coverage
        env:
          PYTHONWARNINGS: "ignore::DeprecationWarning"
          PYTHONPATH: "src"
        run: |
          echo "=== Running test suite ==="
          pytest --maxfail=5 --disable-warnings -v \
            --junitxml=pytest-results.xml \
            --cov=src --cov-report=xml --cov-report=term-missing \
            --cov-fail-under=80

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-py${{ matrix.python-version }}
          path: |
            pytest-results.xml
            coverage.xml

      - name: Upload coverage to Codecov
        if: success() && ${{ secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          flags: python-${{ matrix.python-version }}
          name: codecov-python-${{ matrix.python-version }}
          fail_ci_if_error: false

  verify-build:
    name: Verify Package Build
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip build

      - name: Build package
        run: |
          python -m build

      - name: Verify built package
        run: |
          ls -la dist/
          pip install dist/*.whl
          python -c "import edututor; print('Package imported successfully')"
          

